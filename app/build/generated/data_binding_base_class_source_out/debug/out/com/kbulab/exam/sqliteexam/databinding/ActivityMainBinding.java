// Generated by view binder compiler. Do not edit!
package com.kbulab.exam.sqliteexam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kbulab.exam.sqliteexam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnInsert;

  @NonNull
  public final Button btnLoad;

  @NonNull
  public final Button btnQuery;

  @NonNull
  public final Button btnRemove;

  @NonNull
  public final TextView viewQuery;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnInsert,
      @NonNull Button btnLoad, @NonNull Button btnQuery, @NonNull Button btnRemove,
      @NonNull TextView viewQuery) {
    this.rootView = rootView;
    this.btnInsert = btnInsert;
    this.btnLoad = btnLoad;
    this.btnQuery = btnQuery;
    this.btnRemove = btnRemove;
    this.viewQuery = viewQuery;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_insert;
      Button btnInsert = ViewBindings.findChildViewById(rootView, id);
      if (btnInsert == null) {
        break missingId;
      }

      id = R.id.btn_load;
      Button btnLoad = ViewBindings.findChildViewById(rootView, id);
      if (btnLoad == null) {
        break missingId;
      }

      id = R.id.btn_query;
      Button btnQuery = ViewBindings.findChildViewById(rootView, id);
      if (btnQuery == null) {
        break missingId;
      }

      id = R.id.btn_remove;
      Button btnRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnRemove == null) {
        break missingId;
      }

      id = R.id.view_query;
      TextView viewQuery = ViewBindings.findChildViewById(rootView, id);
      if (viewQuery == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnInsert, btnLoad, btnQuery,
          btnRemove, viewQuery);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
